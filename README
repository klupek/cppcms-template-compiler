What is this: alternative template compiler for cppcms template files
Why: for fun, for sport and to add some magic to templates 

What seems to be working:
	- compiling templates used in cppcms projects into almost (see below) identical cpp code (using compatibility mode)

Improvements:
	- variables with unlimited arguments, which can be other variables
	  - arguments which are variables are correctly prefixed with 'content.' when needed

	- format and rformat - interface for boost::format
	  - <% format "x = %.02f" using x %> /* or rformat */
	  - format escapes result, escape((boost::format("...") % (x)).str())
	  - rformat is UNSAFE, does not escape nothing
	  - example: <% rformat "<li data-foo=\"%s\" data-bar=\"%s\"/>" using foo | escape, bar | escape %>
	  - boost/format.hpp is only required when format/rformat is used.
	
	- "if"/"elif" conditions with "and" and "or" support
	  - only natural order is supported (that means: (a and b or c and d) is evaluated as ((a && b) || (c && d)), because parenthesed expressions would conflict with if ([cppcode]))
	  - unlimited number of ((and|or) (condition)) is supported

	- templates with generic (template) arguments
	  usage:
	  	<% template print_something<T>(T & something) %>
		which is translated to template<typename T> void print_something(T & something) 
	  only useful for <% include print_something(x) %>
	
	- array subscript support (everywhere where "VARIABLE" is supported)
	  <%= foobar.array["blahblah"]()->baz[x] %>


	

What needs to be done:
	- more test cases, also negative (erroneous) ones
	- better error reporting 
	- more magic 

Known generated code differences (from original cppcms_tmpl_cc), using compat mode:
	All result files from my and original cppcms_tmpl_cc are preprocessed (joined adjacent c-strings) and indented (using GNU indent) before comparing.
	tests/tutorial-2*.tmpl-x - tests/tutorial-2.diff
		#include moved to first line (when parsing multiple files)
		collaped skin namespace(closing, opening the same namespace)
		whitespaces between '^' and <% item %> not trimmed


Tests:
	Please checkout tests submodule.
	Running: ./runtests 
	tests/cppblog-admin-caching.tmpl was fixed:
		original:
			<% template master_content() %>
			<div id="form" %>
		fixed: 
			<% template master_content() %>
			<div id="form">

License: MIT
	
