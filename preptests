#!/bin/bash

function prep() {
	root=$1
	name=$2
	perl join_strings.pl  ${root}/${name}.expected.cpp > ${root}/${name}.expected.cpp.new && mv ${root}/${name}.expected.cpp{.new,}
      	indent -ut -kr ${root}/${name}.expected.cpp
	echo "$name: prepared";
}

for f in tests/*.tmpl; do
	name=$(basename "$f" .tmpl)
	if [ ! -f tests/${name}.expected.cpp -o tests/${name}.tmpl -nt tests/${name}.expected.cpp ] || [ -f tests/${name}.args -a tests/${name}.args -nt tests/${name}.expected.cpp ] ; then
		arguments=""
		if [ -f tests/${name}.args ]; then 
			arguments=$(cat tests/${name}.args);
		fi
		cppcms_tmpl_cc $arguments -o tests/${name}.expected.cpp $f 
		prep "tests" $name
	else
		echo "$name: skipped"
	fi
done

for f in tests-magic/*.tmpl; do
	name=$(basename "$f" .tmpl)
	perl -pe 's:^.*<!-- magic -->.*$:magic code here:g' $f | awk '/<!-- cut magic begin -->/{f=0;print ""; next} /<!-- cut magic end -->/{f=1;print ""; next} BEGIN{f=1} { if(f) { print $0 } else print "" }' > tmp/magic-${name}.clean.tmpl
	cppcms_tmpl_cc -o tests-magic/${name}.expected.cpp tmp/magic-${name}.clean.tmpl
	sed "s:tmp/magic-${name}.clean.tmpl:tests-magic/${name}.tmpl:g" -i tests-magic/${name}.expected.cpp
	prep "tests-magic" "$name"
done

cppcms_tmpl_cc -o tests/tutorial-2.expected.cpp tests/tutorial-2*.tmpl-x
prep "tests" "tutorial-2"
